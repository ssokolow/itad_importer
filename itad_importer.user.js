// Generated by CoffeeScript 1.12.8

/* IsThereAnyDeal.com Collection Importer
// ==UserScript==
// @name IsThereAnyDeal.com Collection Importer
// @version 0.1b18
// @namespace http://isthereanydeal.com/
// @description Adds buttons to various sites to export your game lists to ITAD
// @icon http://s3-eu-west-1.amazonaws.com/itad/images/banners/50x50.gif
// @license MIT
// @supportURL https://github.com/ssokolow/itad_importer/issues
// @require https://ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js
//
// @match *://fireflowergames.com/my-account*
// @match *://fireflowergames.com/my-lists/*
// @match *://flyingbundle.com/users/account*
// @match *://www.flyingbundle.com/users/account*
// @match *://www.gog.com/account*
// @match *://www.gog.com/order/status/*
// @match *://itch.io/my-purchases*
// @match *://*.itch.io/*
// @match *://groupees.com/purchases*
// @match *://groupees.com/users/*
// @match *://www.humblebundle.com/home*
// @match *://www.humblebundle.com/downloads?key=*
// @match *://www.humblebundle.com/s?key=*
// ==/UserScript==

Any patches to this script should be made against the original
CoffeeScript source file available (and documented) at:

  https://github.com/ssokolow/itad_importer

Copyright ©2014-2018 Stephan Sokolow
License: MIT (http://opensource.org/licenses/MIT)

TODO:
- Add a `@downloadURL` for the script
 */

(function() {
  var BUTTON_LABEL, ITAD_12X12, ITAD_14X14_GRAY, attr, gog_prepare_title, humble_make_button, humble_parse, itch_plain, romanise_numbers, scrapeGames, scrapers, title_plain;

  BUTTON_LABEL = "Export to ITAD";

  ITAD_12X12 = "data:image/png;base64,\niVBORw0KGgoAAAANSUhEUgAAAAwAAAAMCAMAAABhq6zVAAAAZlBMVEUEbrIEbrIJcbQLcrQefboo\ng70rhb4thr8vh78zicA6jcNCksVLl8hWnctZn8xdoc1ipM9ipc9kptB5stZ6staCt9mHutqJu9ud\nxuGozeSrz+W72OrA2+zJ4O7U5vLX6PPn8fj3+vyC0mvkAAAAAXRSTlMAQObYZgAAAFdJREFUCB0F\nwYkCgUAABcA3CpElRyRH6/9/0kwCQALtZSwNglN9Pt5LR+jqGuelEaYbeBXh04P7KMwDeF6E8l1h\nW1vh8PsO/bWeiGPdl/kzdYjdBkACQP5LygQ7CM8T6wAAAABJRU5ErkJggg==";

  ITAD_14X14_GRAY = "data:image/png;base64,\niVBORw0KGgoAAAANSUhEUgAAAA4AAAAOCAMAAAAolt3jAAAAdVBMVEUEbrKTlaCTlZ+TlZ+UlqCY\nmaSYmqWcnqednqieoKmfoaugoqulprCvsLivsbiwsrmztLuztby2uL7BwsjDxcrExcvIyc7V1trW\n1trX2Nvn5+rp6evx8vP19fb39/j4+Pn5+fr7+/v7+/z8/Pz8/P39/f3///8J+FboAAAAJHRSTlMA\ny+rw8PHx8fHx8vLy9PT09PT19vf39/n5+fz8/f3+/v7+/v695LIzAAAAcUlEQVQIHQXBhwGCQAAE\nsHui2FHsBeyy/4gmSQGgJKWCeTNFVQJNN9yH2xJB+z3WZuf3kjDuD+B8I6wfIzAbpsLuCrg3QtsD\n9TAXJq8tOHYEl9+W0eHbEPaf06u/PvoWsXmuTNrdegwp1QJAVZICQMkf1qQG7Yh+Z60AAAAASUVO\nRK5CYII=";

  this.$ = this.jQuery = jQuery.noConflict(true);

  attr = function(node, name) {
    return node.getAttribute(name);
  };

  romanise_numbers = function(elem) {
    elem = elem.replace(/1/g, "i");
    elem = elem.replace(/2/g, "ii");
    elem = elem.replace(/3/g, "iii");
    elem = elem.replace(/4/g, "iv");
    elem = elem.replace(/5/g, "v");
    elem = elem.replace(/6/g, "vi");
    elem = elem.replace(/7/g, "vii");
    elem = elem.replace(/8/g, "viii");
    elem = elem.replace(/9/g, "ix");
    return elem = elem.replace(/9/g, "ix");
  };

  gog_prepare_title = function(elem) {
    var dom;
    dom = $('.product-title', elem).clone();
    $('._product-flag', dom).remove();
    return dom.text();
  };

  itch_plain = function(elem) {
    return elem.toLowerCase();
  };

  title_plain = function(elem) {
    var plain;
    plain = elem;
    plain = plain.toLowerCase();
    plain = plain.replace(/\bthe\b/g, "");
    plain = plain.replace(/ & /g, " and ");
    plain = plain.replace(" ", "");
    plain = plain.replace(/[\s\.\!@"#$%^&'*\(\)\-:_+=;,\?]/g, "");
    return romanise_numbers(plain);
  };

  humble_make_button = function() {
    var a, button, label;
    label = $('<span class="label"></span>').html(BUTTON_LABEL);
    a = $('<a class="a" href="#"></span>').html(BUTTON_LABEL).css('padding-left', '9px');
    return button = $('<div class="flexbtn active noicon"></div>').append('<div class="right"></div>').append(label).append(a);
  };

  humble_parse = function() {
    var x;
    return {
      version: "02",
      data: (function() {
        var i, len, ref, results1;
        ref = $('div.row').has(' .downloads.windows .download, .downloads.linux .download, .downloads.mac .download, .downloads.android .download').find('div.title');
        results1 = [];
        for (i = 0, len = ref.length; i < len; i++) {
          x = ref[i];
          results1.push({
            title: x.textContent.trim(),
            copies: [
              {
                type: 'humblestore'
              }
            ]
          });
        }
        return results1;
      })()
    };
  };

  scrapers = {
    'fireflowergames.com': {
      '^https://fireflowergames\\.com/my-account/?': {
        'source_id': 'fireflower',
        'game_list': function() {
          var results, title, titles, uniques, x;
          results = $('ul.digital-downloads li a');
          titles = [
            (function() {
              var i, len, results1;
              results1 = [];
              for (i = 0, len = results.length; i < len; i++) {
                x = results[i];
                results1.push($(x).text().split(" – ")[0].trim());
              }
              return results1;
            })()
          ][0];
          uniques = titles.filter(function(title, pos) {
            return titles.indexOf(title) === pos;
          });
          return {
            version: "02",
            data: (function() {
              var i, len, results1;
              results1 = [];
              for (i = 0, len = uniques.length; i < len; i++) {
                title = uniques[i];
                results1.push({
                  title: title,
                  copies: [
                    {
                      type: 'fireflower',
                      status: 'redeemed',
                      owned: 1
                    }
                  ]
                });
              }
              return results1;
            })()
          };
        },
        'insert_button': function() {
          return $('<a class="button"></a>').html(BUTTON_LABEL).css({
            verticalAlign: '20%',
            marginLeft: '1em'
          }).appendTo($('ul.digital-downloads').prev());
        }
      },
      '^http://fireflowergames\\.com/my-lists/(edit-my|view-a)-list/\\?.+': {
        'source_id': 'fireflower',
        'game_list': function() {
          var results, x;
          results = $('table.wl-table tbody td.check-column input:checked').parents('tr').find('td.product-name a');
          if (!results.length) {
            results = $('table.wl-table td.product-name a');
          }
          return {
            version: "02",
            data: (function() {
              var i, len, results1;
              results1 = [];
              for (i = 0, len = results.length; i < len; i++) {
                x = results[i];
                results1.push({
                  title: $(x).text().trim()
                });
              }
              return results1;
            })()
          };
        },
        'insert_button': function() {
          return $('<a class="button"></a>').html(BUTTON_LABEL).wrap('<td></td>').appendTo($('table.wl-actions-table tbody:first').find('tr:last'));
        },
        'is_wishlist': true
      }
    },
    'flyingbundle.com': {
      'https?://(www\\.)?flyingbundle\\.com/users/account#?': {
        'source_id': 'flying_bundle',
        'game_list': function() {
          var x;
          return {
            version: "02",
            data: (function() {
              var i, len, ref, results1;
              ref = $(".div_btn_download[href^='/users/sources']").parents('li').find(':first');
              results1 = [];
              for (i = 0, len = ref.length; i < len; i++) {
                x = ref[i];
                results1.push({
                  title: $(x).text(),
                  copies: [
                    {
                      type: 'Flying Bundle',
                      status: 'redeemed',
                      owned: 1,
                      source: {
                        type: "s",
                        id: "other"
                      }
                    }
                  ]
                });
              }
              return results1;
            })()
          };
        },
        'insert_button': function() {
          var li;
          li = $("<li></li>").appendTo('.legenda_points ul');
          return $('<a href="#">' + BUTTON_LABEL + ' <img src="' + ITAD_14X14_GRAY + '" /></a>').css('text-transform', 'uppercase').wrap("<li></li>").appendTo(li);
        }
      }
    },
    'www.gog.com': {
      '^https://www\\.gog\\.com/order/status/.+': {
        'source_id': 'gog',
        'game_list': function() {
          var x;
          console.debug("game_list called for GOG order status page");
          return {
            "version": "02",
            "data": (function() {
              var i, len, ref, results1;
              ref = $('.order + .container .product-row');
              results1 = [];
              for (i = 0, len = ref.length; i < len; i++) {
                x = ref[i];
                results1.push({
                  title: gog_prepare_title(x),
                  copies: [
                    {
                      type: 'gog',
                      status: 'redeemed',
                      owned: 1
                    }
                  ]
                });
              }
              return results1;
            })()
          };
        },
        'insert_button': function() {
          console.debug("insert_button called for GOG order status page");
          $(".order-article__btn-pointer-wrapper .order-article__btn-pointer").css({
            marginTop: -4,
            zIndex: 20
          });
          $('.order-article__dropdown-items').css('z-index', 10);
          return $("<a class='_dropdown__item ng-scope'></a>").html("On ITAD").prependTo($('.order-message__actions ._dropdown__items').filter(':first'));
        }
      },
      '^https?://www\\.gog\\.com/account(/games(/(shelf|list))?)?/?(\\?|$)': {
        'source_id': 'gog',
        'game_list': function() {
          var x;
          console.debug("game_list called for GOG collection page");
          return {
            "version": "02",
            "data": (function() {
              var i, len, ref, results1;
              ref = $('.product-row');
              results1 = [];
              for (i = 0, len = ref.length; i < len; i++) {
                x = ref[i];
                results1.push({
                  title: gog_prepare_title(x),
                  copies: [
                    {
                      type: 'gog',
                      status: 'redeemed',
                      owned: 1
                    }
                  ]
                });
              }
              return results1;
            })()
          };
        },
        'insert_button': function() {
          console.debug("insert_button called for GOG collection page");
          return $("<span></span>").css({
            float: 'right',
            cursor: 'pointer',
            position: 'relative',
            marginBottom: '-2em',
            zIndex: 1
          }).html(BUTTON_LABEL + " (This Page)").prependTo($('.collection-header').filter(':first'));
        }
      }
    },
    'itch.io': {
      '^https?://.+\\.itch\\.io/.+/download/.+': {
        'source_id': 'itchio',
        'game_list': function() {
          var x;
          console.debug("game_list called for itch.io download page");
          return {
            "version": "02",
            "data": (function() {
              var i, len, ref, results1;
              ref = $('.inner_column').filter(':first');
              results1 = [];
              for (i = 0, len = ref.length; i < len; i++) {
                x = ref[i];
                results1.push({
                  title: $('.object_title', x).first().text().replace("  ", " ").trim(),
                  plain: title_plain($('.object_title', x).first().text().trim()),
                  copies: [
                    {
                      added: new Date($('p > abbr', x).attr('title').replace('@', '') + " UTC").getTime() / 1000,
                      type: 'itchio',
                      status: 'redeemed',
                      owned: 1
                    }
                  ]
                });
              }
              return results1;
            })()
          };
        },
        'insert_button': function() {
          console.debug("insert_button called for itch.io download page");
          return $("<span></span>").css({
            float: 'right',
            cursor: 'pointer',
            position: 'relative',
            marginBottom: '-2em',
            zIndex: 1
          }).html(BUTTON_LABEL + " (This Page)").appendTo($('.header_nav_tabs').filter(':first'));
        }
      }
    },
    'groupees.com': {
      'https?://(www\\.)?groupees\\.com/(purchases|users/\\d+)': {
        'source_id': 'other',
        'game_list': function() {
          var x;
          return {
            "version": "02",
            "data": (function() {
              var i, len, ref, results1;
              ref = $('.product ul.dropdown-menu').parents('.details').find('h3');
              results1 = [];
              for (i = 0, len = ref.length; i < len; i++) {
                x = ref[i];
                results1.push({
                  title: x.textContent.trim(),
                  copies: [
                    {
                      type: 'Groupees.com',
                      status: 'redeemed',
                      owned: 1,
                      source: {
                        type: "s",
                        id: "other"
                      }
                    }
                  ]
                });
              }
              return results1;
            })()
          };
        },
        'insert_button': function() {
          return $("<button></button>").css({
            float: 'right'
          }).addClass('button btn btn-sm btn-primary').html(BUTTON_LABEL + " (Selected Bundle)").insertBefore("input[name='search']");
        }
      }
    },
    'www.humblebundle.com': {
      'https://www\\.humblebundle\\.com/home/library/?': {
        'source_id': 'humblestore',
        'game_list': function() {
          var x;
          return {
            "version": "02",
            "data": (function() {
              var i, len, ref, results1;
              ref = $('.subproduct-selector h2');
              results1 = [];
              for (i = 0, len = ref.length; i < len; i++) {
                x = ref[i];
                results1.push({
                  title: x.textContent.trim(),
                  copies: [
                    {
                      type: 'humblestore',
                      status: 'redeemed',
                      owned: 1
                    }
                  ]
                });
              }
              return results1;
            })()
          };
        },
        'insert_button': function() {
          var button, config, found_early, observer;
          config = {
            childList: true,
            subtree: true
          };
          button = $('<button class="download-button"></button>').html(BUTTON_LABEL).css({
            display: 'inline',
            border: '1px solid #CCC',
            background: '#F1F3F6',
            padding: '5px 10px 5px 10px',
            marginLeft: '10px'
          });
          found_early = $(".top-controls");
          if (found_early.length > 0) {
            console.log("Inserting button immediately.");
            button.appendTo(found_early);
          } else {
            console.log("Using MutationObserver for deferred button insertion.");
            observer = new MutationObserver(function(mutations) {
              return mutations.forEach(function(mutation) {
                var found, tnode_cls;
                tnode_cls = mutation.target.getAttribute("class");
                found = $(".top-controls", mutation.target);
                if (found.length > 0) {
                  observer.disconnect();
                  return button.appendTo(found);
                }
              });
            });
            observer.observe(document.querySelector('.js-library-holder'), config);
          }
          return button;
        }
      },
      'https://www\\.humblebundle\\.com/home/?': {
        'source_id': 'humblestore',
        'game_list': humble_parse,
        'insert_button': function() {
          return humble_make_button().css({
            float: 'right',
            fontSize: '14px',
            fontWeight: 'normal'
          }).prependTo('.base-main-wrapper h1');
        }
      },
      'https://www\\.humblebundle\\.com/(download)?s\\?key=.+': {
        'source_id': 'humblestore',
        'game_list': humble_parse,
        'insert_button': function() {
          var parent;
          parent = $('.js-gamelist-holder').parents('.whitebox');
          parent.find('.staple.s4').remove();
          return humble_make_button().css({
            position: 'absolute',
            top: 11,
            right: 17
          }).appendTo(parent);
        }
      }
    }
  };

  scrapers['www.flyingbundle.com'] = scrapers['flyingbundle.com'];

  scrapers['www.groupees.com'] = scrapers['groupees.com'];

  scrapeGames = function(scraper_obj) {
    var form, params, url;
    params = {
      file: btoa(unescape(encodeURIComponent(JSON.stringify(scraper_obj.game_list())))),
      upload: 'x'
    };
    url = scraper_obj.is_wishlist != null ? 'https://isthereanydeal.com/waitlist/import/' : 'https://isthereanydeal.com/collection/import/';
    form = $("<form id='itad_submitter' method='POST' />").attr('action', url);
    params['returnTo'] = location.href;
    form.css({
      display: 'none'
    });
    $.each(params, function(key, value) {
      return $("<input type='hidden' />").attr("name", key).attr("value", value).appendTo(form);
    });
    $(document.body).append(form);
    return form.submit();
  };

  $(function() {
    var e, fn, i, len, profile, profile_matched, ref, regex, results1, scraper;
    console.log("Loading ITAD importer...");
    if (location.host.match(/\.itch\.io/)) {
      scrapers[location.host] = scrapers['itch.io'];
    }
    if (scrapers[location.host]) {
      console.log("Matched domain: " + location.host);
      ref = scrapers[location.host];
      results1 = [];
      for (regex in ref) {
        profile = ref[regex];
        try {
          profile_matched = location.href.match(regex);
        } catch (error) {
          e = error;
          console.error("Bad regex: " + regex);
        }
        if (profile_matched) {
          console.log("Matched profile: " + regex);
          $('.itad_btn, #itad_dlg, .itad_close').remove();
          if (!Array.isArray(profile)) {
            profile = [profile];
          }
          fn = function(scraper) {
            console.log("Inserting ITAD button for source ID: " + scraper.source_id);
            return typeof scraper.insert_button === "function" ? scraper.insert_button().addClass('itad_btn').click(function() {
              console.log("ITAD button clicked");
              return scrapeGames(scraper);
            }) : void 0;
          };
          for (i = 0, len = profile.length; i < len; i++) {
            scraper = profile[i];
            fn(scraper);
          }
          break;
        } else {
          results1.push(void 0);
        }
      }
      return results1;
    }
  });

}).call(this);
